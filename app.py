from flask import Flask, request, jsonify
from flask_mail import Mail, Message
import os

app = Flask(__name__)

app.config['MAIL_SERVER'] = os.environ.get('MAIL_SERVER')
app.config['MAIL_PORT'] = int(os.environ.get('MAIL_PORT'))
app.config['MAIL_USE_TLS'] = os.environ.get('MAIL_USE_TLS') == 'True'
app.config['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME')
app.config['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD')
app.config['MAIL_DEFAULT_SENDER'] = os.environ.get('MAIL_DEFAULT_SENDER')

mail = Mail(app)

def create_digest_html(title, web_link, text=None, pdf=False):
    content = "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞ –≤–æ –≤–ª–æ–∂–µ–Ω–∏–∏." if pdf else text
    html = f"""
    <html>
      <body style="background-color: #ffffff; color: #333333; font-family: Arial, sans-serif; padding: 20px;">
        <!-- –õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏ -->
        <div style="text-align: center; margin-bottom: 20px;">
          <img src="https://cdn.emailacademy.com/user/unregistered/crosswords_logo2025_03_31_15_39_32.png" alt="–õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏" style="max-width:200px;">
        </div>
        <!-- –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ -->
        <h1 style="text-align: center;"><b>{title}</b></h1>
        <!-- –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ -->
        <p>{content}</p>
        <!-- –ö–Ω–æ–ø–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≤–µ–±-–≤–µ—Ä—Å–∏—é -->
        <div style="text-align: center; margin-top: 30px;">
          <a href="{web_link}" style="display: inline-block; padding: 10px 20px; background-color: #ffdd2d; color: #333333; text-decoration: none; border-radius: 5px;">
            –û—Ç–∫—Ä—ã—Ç—å –≤ –∫–æ—Ä–ø—É—Å–µ
          </a>
        </div>
      </body>
    </html>
    """
    return html

@app.route('/send-email', methods=['POST'])
def send_email():
    if request.is_json:
        data = request.get_json()
        recipients = data.get('recipients')
        title = data.get('title')
        text = data.get('text')
        web_link = data.get('web_link')
        pdf_file = None
    else:
        recipients = request.form.getlist('recipients')
        title = request.form.get('title')
        text = request.form.get('text')
        web_link = request.form.get('web_link')
        pdf_file = request.files.get('pdf')

    if not recipients or not title or not web_link:
        return jsonify(
            {"error": "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: recipients, title –∏–ª–∏ web_link"}), 400
    pdf_present = pdf_file is not None

    if not pdf_present and not text:
        return jsonify({"error": "–ù–µ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∏ —Ç–µ–∫—Å—Ç, –Ω–∏ PDF —Ñ–∞–π–ª. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤."}), 400

    subject = f"–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç - {title}"
    html_body = create_digest_html(title, web_link, text=text, pdf=pdf_present)

    try:
        msg = Message(subject, recipients=recipients, html=html_body)

        if pdf_present:
            pdf_data = pdf_file.read()
            msg.attach(pdf_file.filename, 'application/pdf', pdf_data)
        mail.send(msg)
        return jsonify({"message": "Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"}), 200
    except Exception as e:
        return jsonify({"error": str(e)}), 500


def create_verification_html(code):
    html = f"""
    <html>
      <body style="background-color: #ffffff; color: #333333; font-family: Arial, sans-serif; padding: 20px;">
        <!-- –õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏ -->
        <div style="text-align: center; margin-bottom: 20px;">
          <img src="https://cdn.emailacademy.com/user/unregistered/crosswords_logo2025_03_31_15_39_32.png" alt="–õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏" style="max-width:200px;">
        </div>

        <p style="font-size: 18px;">–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.</p>

        <p style="text-align: center; font-size: 32px; font-weight: bold; margin: 20px 0;">{code}</p>

        <p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ Crosswords! üéâ</p>
        <p>–¢–µ–ø–µ—Ä—å –≤—ã –≤ –∫—É—Ä—Å–µ –≤—Å–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ: —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ ‚Äî –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —à—É–º–∞.</p>
        <p>–ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º —É –Ω–∞—Å –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è! –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∏–ª–∏ –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ.</p>
        <p>–í—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏.</p>
        <p>–ü—Ä–∏—è—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è! üòä</p>
      </body>
    </html>
    """
    return html


@app.route('/verify_email', methods=['POST'])
def verify_email():
    data = request.get_json()
    email = data.get('email')
    code = data.get('code')

    if not email or not code:
        return jsonify({"error": "–ü–æ–ª—è 'email' –∏ 'code' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã"}), 400

    try:
        html_body = create_verification_html(code)
        msg = Message("–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", recipients=[email], html=html_body)
        mail.send(msg)
        return jsonify({"message": "–ü–∏—Å—å–º–æ —Å –∫–æ–¥–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"}), 200
    except Exception as e:
        return jsonify({"error": str(e)}), 500


if __name__ == '__main__':
    app.run(debug=False)
